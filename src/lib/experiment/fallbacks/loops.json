{
    "TrialHandler": {
        "__class__": "psychopy.experiment.loops:TrialHandler",
        "__name__": "TrialHandler",
        "plugin": null,
        "params": {
            "name": {
                "val": "trials",
                "valType": "code",
                "inputType": "name",
                "categ": null,
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Name",
                "hint": "Name of this loop",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "loopType": {
                "val": "random",
                "valType": "str",
                "inputType": "choice",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [
                    "random",
                    "sequential",
                    "fullRandom"
                ],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Loop type",
                "hint": "How should the next condition value(s) be chosen?",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "isTrials": {
                "val": true,
                "valType": "bool",
                "inputType": "bool",
                "categ": null,
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Is trials",
                "hint": "Indicates that this loop generates TRIALS, rather than BLOCKS of trials or stimuli within a trial. It alters how data files are output",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "conditionsFile": {
                "val": "",
                "valType": "file",
                "inputType": "conditions",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {
                    "template": "F:\\GitHub\\psychopy\\psychopy\\experiment\\loopTemplate.xltx"
                },
                "label": "Conditions",
                "hint": "Name of a file specifying the parameters for each condition (.csv, .xlsx, or .pkl). Browse to select a file. Right-click to preview file contents, or create a new file.",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "nReps": {
                "val": 5,
                "valType": "code",
                "inputType": "single",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Num. repeats",
                "hint": "Number of repeats (for each condition)",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "Selected rows": {
                "val": "",
                "valType": "code",
                "inputType": "single",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Selected rows",
                "hint": "Select just a subset of rows from your condition file (the first is 0 not 1!). Examples: 0, 0:5, 5:-1",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "random seed": {
                "val": "",
                "valType": "code",
                "inputType": "single",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Random seed",
                "hint": "To have a fixed random sequence provide an integer of your choosing here. Leave blank to have a new random sequence on each run of the experiment.",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "conditions": {
                "val": [],
                "valType": "str",
                "inputType": "hidden",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Conditions",
                "hint": "A list of dictionaries describing the parameters in each condition",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "endPoints": {
                "val": [
                    0,
                    1
                ],
                "valType": "code",
                "inputType": "hidden",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "End points",
                "hint": "The start and end of the loop (see flow timeline)",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            }
        }
    },
    "StairHandler": {
        "__class__": "psychopy.experiment.loops:StairHandler",
        "__name__": "StairHandler",
        "plugin": null,
        "params": {
            "name": {
                "val": "stair",
                "valType": "code",
                "inputType": "name",
                "categ": null,
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Name",
                "hint": "Name of this loop",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "isTrials": {
                "val": true,
                "valType": "bool",
                "inputType": "bool",
                "categ": null,
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Is trials",
                "hint": "Indicates that this loop generates TRIALS, rather than BLOCKS of trials or stimuli within a trial. It alters how data files are output",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "nReps": {
                "val": "50",
                "valType": "code",
                "inputType": "single",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "nReps",
                "hint": "(Minimum) number of trials in the staircase",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "start value": {
                "val": "",
                "valType": "code",
                "inputType": "single",
                "categ": "Staircase",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Start value",
                "hint": "The initial value of the parameter",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "max value": {
                "val": 1,
                "valType": "code",
                "inputType": "single",
                "categ": "Staircase",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Max value",
                "hint": "The maximum value the parameter can take",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "min value": {
                "val": 0,
                "valType": "code",
                "inputType": "single",
                "categ": "Staircase",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Min value",
                "hint": "The minimum value the parameter can take",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "step sizes": {
                "val": "[4,4,2,2,1]",
                "valType": "list",
                "inputType": "single",
                "categ": "Staircase",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Step sizes",
                "hint": "The size of the jump at each step (can change on each 'reversal')",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "step type": {
                "val": "db",
                "valType": "str",
                "inputType": "choice",
                "categ": "Staircase",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [
                    "lin",
                    "log",
                    "db"
                ],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Step type",
                "hint": "The units of the step size (e.g. 'linear' will add/subtract that value each step, whereas 'log' will ad that many log units)",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "N up": {
                "val": 1,
                "valType": "code",
                "inputType": "single",
                "categ": "Staircase",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "N up",
                "hint": "The number of 'incorrect' answers before the value goes up",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "N down": {
                "val": 3,
                "valType": "code",
                "inputType": "single",
                "categ": "Staircase",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "N down",
                "hint": "The number of 'correct' answers before the value goes down",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "N reversals": {
                "val": "",
                "valType": "code",
                "inputType": "single",
                "categ": "Staircase",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "N reversals",
                "hint": "Minimum number of times the staircase must change direction before ending",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            }
        }
    },
    "MultiStairHandler": {
        "__class__": "psychopy.experiment.loops:MultiStairHandler",
        "__name__": "MultiStairHandler",
        "plugin": null,
        "params": {
            "name": {
                "val": "stair",
                "valType": "code",
                "inputType": "name",
                "categ": null,
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Name",
                "hint": "Name of this loop",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "isTrials": {
                "val": true,
                "valType": "bool",
                "inputType": "bool",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Is trials",
                "hint": "Indicates that this loop generates TRIALS, rather than BLOCKS of trials or stimuli within a trial. It alters how data files are output",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "nReps": {
                "val": "50",
                "valType": "num",
                "inputType": "spin",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "nReps",
                "hint": "(Minimum) number of trials in *each* staircase",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "stairType": {
                "val": "simple",
                "valType": "str",
                "inputType": "choice",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [
                    "simple",
                    "QUEST",
                    "questplus"
                ],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Stair type",
                "hint": "How to select the next staircase to run",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "switchMethod": {
                "val": "random",
                "valType": "str",
                "inputType": "choice",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [
                    "random",
                    "sequential",
                    "fullRandom"
                ],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Switch method",
                "hint": "How to select the next staircase to run",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "conditions": {
                "val": [],
                "valType": "list",
                "inputType": "hidden",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {},
                "label": "Conditions",
                "hint": "A list of dictionaries describing the differences between each staircase",
                "plugin": null,
                "depends": {
                    "shown": [],
                    "enabled": []
                }
            },
            "conditionsFile_simple": {
                "val": "",
                "valType": "file",
                "inputType": "conditions",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {
                    "template": "F:\\GitHub\\psychopy\\psychopy\\experiment\\staircaseTemplate.xltx"
                },
                "label": "Conditions",
                "hint": "An xlsx or csv file specifying the parameters for each condition",
                "plugin": null,
                "depends": {
                    "shown": [
                        {
                            "param": "stairType",
                            "condition": "=='simple'"
                        }
                    ],
                    "enabled": []
                }
            },
            "conditionsFile_QUEST": {
                "val": "",
                "valType": "file",
                "inputType": "conditions",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {
                    "template": "F:\\GitHub\\psychopy\\psychopy\\experiment\\questTemplate.xltx"
                },
                "label": "Conditions",
                "hint": "An xlsx or csv file specifying the parameters for each condition",
                "plugin": null,
                "depends": {
                    "shown": [
                        {
                            "param": "stairType",
                            "condition": "=='QUEST'"
                        }
                    ],
                    "enabled": []
                }
            },
            "conditionsFile_questplus": {
                "val": "",
                "valType": "file",
                "inputType": "conditions",
                "categ": "Basic",
                "updates": null,
                "allowedUpdates": null,
                "allowedVals": [],
                "allowedLabels": [],
                "ctrlParams": {
                    "template": "F:\\GitHub\\psychopy\\psychopy\\experiment\\questPlusTemplate.xltx"
                },
                "label": "Conditions",
                "hint": "An xlsx or csv file specifying the parameters for each condition",
                "plugin": null,
                "depends": {
                    "shown": [
                        {
                            "param": "stairType",
                            "condition": "=='questplus'"
                        }
                    ],
                    "enabled": []
                }
            }
        }
    }
}